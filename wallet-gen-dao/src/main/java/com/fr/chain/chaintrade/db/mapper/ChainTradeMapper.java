package com.fr.chain.chaintrade.db.mapper;

import com.fr.chain.chaintrade.db.entity.ChainTrade;
import com.fr.chain.chaintrade.db.entity.ChainTradeExample;
import com.fr.chain.chaintrade.db.entity.ChainTradeKey;
import com.fr.chain.db.iface.StaticTableDaoSupport;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ChainTradeMapper extends StaticTableDaoSupport<ChainTrade, ChainTradeExample, ChainTradeKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @SelectProvider(type=ChainTradeSqlProvider.class, method="countByExample")
    int countByExample(ChainTradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @DeleteProvider(type=ChainTradeSqlProvider.class, method="deleteByExample")
    int deleteByExample(ChainTradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @Delete({
        "delete from CHAIN_TRADE",
        "where CHAIN_TRADE_ID = #{chainTradeId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(ChainTradeKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @Insert({
        "insert into CHAIN_TRADE (CHAIN_TRADE_ID, MERCHANT_ID, ",
        "APP_ID, OPEN_ID, ORDER_ID, ",
        "TXID, CHAIN_CODE, ",
        "PRODUCT_ID, IS_DIGIT, ",
        "UNIT, MINCOUNT, ",
        "COUNT, AMOUNT, CREATE_TIME, ",
        "UPDATE_TIME, PROCESS_STATUS)",
        "values (#{chainTradeId,jdbcType=VARCHAR}, #{merchantId,jdbcType=VARCHAR}, ",
        "#{appId,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, ",
        "#{txid,jdbcType=VARCHAR}, #{chainCode,jdbcType=INTEGER}, ",
        "#{productId,jdbcType=VARCHAR}, #{isDigit,jdbcType=VARCHAR}, ",
        "#{unit,jdbcType=VARCHAR}, #{mincount,jdbcType=VARCHAR}, ",
        "#{count,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{processStatus,jdbcType=INTEGER})"
    })
    int insert(ChainTrade record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @InsertProvider(type=ChainTradeSqlProvider.class, method="insertSelective")
    int insertSelective(ChainTrade record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @SelectProvider(type=ChainTradeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="CHAIN_TRADE_ID", property="chainTradeId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="MERCHANT_ID", property="merchantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="APP_ID", property="appId", jdbcType=JdbcType.VARCHAR),
        @Result(column="OPEN_ID", property="openId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORDER_ID", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="TXID", property="txid", jdbcType=JdbcType.VARCHAR),
        @Result(column="CHAIN_CODE", property="chainCode", jdbcType=JdbcType.INTEGER),
        @Result(column="PRODUCT_ID", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_DIGIT", property="isDigit", jdbcType=JdbcType.VARCHAR),
        @Result(column="UNIT", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="MINCOUNT", property="mincount", jdbcType=JdbcType.VARCHAR),
        @Result(column="COUNT", property="count", jdbcType=JdbcType.VARCHAR),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.DECIMAL),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="PROCESS_STATUS", property="processStatus", jdbcType=JdbcType.INTEGER)
    })
    List<ChainTrade> selectByExample(ChainTradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @Select({
        "select",
        "CHAIN_TRADE_ID, MERCHANT_ID, APP_ID, OPEN_ID, ORDER_ID, TXID, CHAIN_CODE, PRODUCT_ID, ",
        "IS_DIGIT, UNIT, MINCOUNT, COUNT, AMOUNT, CREATE_TIME, UPDATE_TIME, PROCESS_STATUS",
        "from CHAIN_TRADE",
        "where CHAIN_TRADE_ID = #{chainTradeId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="CHAIN_TRADE_ID", property="chainTradeId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="MERCHANT_ID", property="merchantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="APP_ID", property="appId", jdbcType=JdbcType.VARCHAR),
        @Result(column="OPEN_ID", property="openId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORDER_ID", property="orderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="TXID", property="txid", jdbcType=JdbcType.VARCHAR),
        @Result(column="CHAIN_CODE", property="chainCode", jdbcType=JdbcType.INTEGER),
        @Result(column="PRODUCT_ID", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_DIGIT", property="isDigit", jdbcType=JdbcType.VARCHAR),
        @Result(column="UNIT", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="MINCOUNT", property="mincount", jdbcType=JdbcType.VARCHAR),
        @Result(column="COUNT", property="count", jdbcType=JdbcType.VARCHAR),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.DECIMAL),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="PROCESS_STATUS", property="processStatus", jdbcType=JdbcType.INTEGER)
    })
    ChainTrade selectByPrimaryKey(ChainTradeKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @UpdateProvider(type=ChainTradeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ChainTrade record, @Param("example") ChainTradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @UpdateProvider(type=ChainTradeSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ChainTrade record, @Param("example") ChainTradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @UpdateProvider(type=ChainTradeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ChainTrade record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CHAIN_TRADE
     *
     * @mbggenerated Thu Feb 23 16:37:03 CST 2017
     */
    @Update({
        "update CHAIN_TRADE",
        "set MERCHANT_ID = #{merchantId,jdbcType=VARCHAR},",
          "APP_ID = #{appId,jdbcType=VARCHAR},",
          "OPEN_ID = #{openId,jdbcType=VARCHAR},",
          "ORDER_ID = #{orderId,jdbcType=VARCHAR},",
          "TXID = #{txid,jdbcType=VARCHAR},",
          "CHAIN_CODE = #{chainCode,jdbcType=INTEGER},",
          "PRODUCT_ID = #{productId,jdbcType=VARCHAR},",
          "IS_DIGIT = #{isDigit,jdbcType=VARCHAR},",
          "UNIT = #{unit,jdbcType=VARCHAR},",
          "MINCOUNT = #{mincount,jdbcType=VARCHAR},",
          "COUNT = #{count,jdbcType=VARCHAR},",
          "AMOUNT = #{amount,jdbcType=DECIMAL},",
          "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},",
          "UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},",
          "PROCESS_STATUS = #{processStatus,jdbcType=INTEGER}",
        "where CHAIN_TRADE_ID = #{chainTradeId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(ChainTrade record);
}