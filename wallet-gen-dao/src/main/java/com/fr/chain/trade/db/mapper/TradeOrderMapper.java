package com.fr.chain.trade.db.mapper;

import com.fr.chain.db.iface.StaticTableDaoSupport;
import com.fr.chain.trade.db.entity.TradeOrder;
import com.fr.chain.trade.db.entity.TradeOrderExample;
import com.fr.chain.trade.db.entity.TradeOrderKey;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TradeOrderMapper extends StaticTableDaoSupport<TradeOrder, TradeOrderExample, TradeOrderKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @SelectProvider(type=TradeOrderSqlProvider.class, method="countByExample")
    int countByExample(TradeOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @DeleteProvider(type=TradeOrderSqlProvider.class, method="deleteByExample")
    int deleteByExample(TradeOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @Delete({
        "delete from TRADE_ORDER",
        "where ORDER_ID = #{orderId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(TradeOrderKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @Insert({
        "insert into TRADE_ORDER (ORDER_ID, MERCHANT_ID, ",
        "APP_ID, OPEN_ID, ORIGIN_OPENID, ",
        "PRODUCT_ID, PROPERTY_TYPE, ",
        "IS_SELF_SUPPORT, PRODUCT_DESC, ",
        "IS_DIGIT, SIGNTYPE, ",
        "PROPERTY_NAME, UNIT, ",
        "MINCOUNT, COUNT, ",
        "URL, AMOUNT, DESCRIPTION, ",
        "ADDRESS, TRADE_TYPE, ",
        "CREATE_TIME)",
        "values (#{orderId,jdbcType=VARCHAR}, #{merchantId,jdbcType=VARCHAR}, ",
        "#{appId,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{originOpenid,jdbcType=VARCHAR}, ",
        "#{productId,jdbcType=VARCHAR}, #{propertyType,jdbcType=VARCHAR}, ",
        "#{isSelfSupport,jdbcType=VARCHAR}, #{productDesc,jdbcType=VARCHAR}, ",
        "#{isDigit,jdbcType=VARCHAR}, #{signtype,jdbcType=VARCHAR}, ",
        "#{propertyName,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, ",
        "#{mincount,jdbcType=VARCHAR}, #{count,jdbcType=VARCHAR}, ",
        "#{url,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, #{description,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR}, #{tradeType,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(TradeOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @InsertProvider(type=TradeOrderSqlProvider.class, method="insertSelective")
    int insertSelective(TradeOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @SelectProvider(type=TradeOrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ORDER_ID", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="MERCHANT_ID", property="merchantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="APP_ID", property="appId", jdbcType=JdbcType.VARCHAR),
        @Result(column="OPEN_ID", property="openId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORIGIN_OPENID", property="originOpenid", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_ID", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_TYPE", property="propertyType", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_SELF_SUPPORT", property="isSelfSupport", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_DESC", property="productDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_DIGIT", property="isDigit", jdbcType=JdbcType.VARCHAR),
        @Result(column="SIGNTYPE", property="signtype", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_NAME", property="propertyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="UNIT", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="MINCOUNT", property="mincount", jdbcType=JdbcType.VARCHAR),
        @Result(column="COUNT", property="count", jdbcType=JdbcType.VARCHAR),
        @Result(column="URL", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.DOUBLE),
        @Result(column="DESCRIPTION", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="ADDRESS", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="TRADE_TYPE", property="tradeType", jdbcType=JdbcType.INTEGER),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TradeOrder> selectByExample(TradeOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @Select({
        "select",
        "ORDER_ID, MERCHANT_ID, APP_ID, OPEN_ID, ORIGIN_OPENID, PRODUCT_ID, PROPERTY_TYPE, ",
        "IS_SELF_SUPPORT, PRODUCT_DESC, IS_DIGIT, SIGNTYPE, PROPERTY_NAME, UNIT, MINCOUNT, ",
        "COUNT, URL, AMOUNT, DESCRIPTION, ADDRESS, TRADE_TYPE, CREATE_TIME",
        "from TRADE_ORDER",
        "where ORDER_ID = #{orderId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="ORDER_ID", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="MERCHANT_ID", property="merchantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="APP_ID", property="appId", jdbcType=JdbcType.VARCHAR),
        @Result(column="OPEN_ID", property="openId", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORIGIN_OPENID", property="originOpenid", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_ID", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_TYPE", property="propertyType", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_SELF_SUPPORT", property="isSelfSupport", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_DESC", property="productDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_DIGIT", property="isDigit", jdbcType=JdbcType.VARCHAR),
        @Result(column="SIGNTYPE", property="signtype", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_NAME", property="propertyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="UNIT", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="MINCOUNT", property="mincount", jdbcType=JdbcType.VARCHAR),
        @Result(column="COUNT", property="count", jdbcType=JdbcType.VARCHAR),
        @Result(column="URL", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.DOUBLE),
        @Result(column="DESCRIPTION", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="ADDRESS", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="TRADE_TYPE", property="tradeType", jdbcType=JdbcType.INTEGER),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    TradeOrder selectByPrimaryKey(TradeOrderKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @UpdateProvider(type=TradeOrderSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TradeOrder record, @Param("example") TradeOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @UpdateProvider(type=TradeOrderSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TradeOrder record, @Param("example") TradeOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @UpdateProvider(type=TradeOrderSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TradeOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRADE_ORDER
     *
     * @mbggenerated Tue Feb 14 17:18:33 CST 2017
     */
    @Update({
        "update TRADE_ORDER",
        "set MERCHANT_ID = #{merchantId,jdbcType=VARCHAR},",
          "APP_ID = #{appId,jdbcType=VARCHAR},",
          "OPEN_ID = #{openId,jdbcType=VARCHAR},",
          "ORIGIN_OPENID = #{originOpenid,jdbcType=VARCHAR},",
          "PRODUCT_ID = #{productId,jdbcType=VARCHAR},",
          "PROPERTY_TYPE = #{propertyType,jdbcType=VARCHAR},",
          "IS_SELF_SUPPORT = #{isSelfSupport,jdbcType=VARCHAR},",
          "PRODUCT_DESC = #{productDesc,jdbcType=VARCHAR},",
          "IS_DIGIT = #{isDigit,jdbcType=VARCHAR},",
          "SIGNTYPE = #{signtype,jdbcType=VARCHAR},",
          "PROPERTY_NAME = #{propertyName,jdbcType=VARCHAR},",
          "UNIT = #{unit,jdbcType=VARCHAR},",
          "MINCOUNT = #{mincount,jdbcType=VARCHAR},",
          "COUNT = #{count,jdbcType=VARCHAR},",
          "URL = #{url,jdbcType=VARCHAR},",
          "AMOUNT = #{amount,jdbcType=DOUBLE},",
          "DESCRIPTION = #{description,jdbcType=VARCHAR},",
          "ADDRESS = #{address,jdbcType=VARCHAR},",
          "TRADE_TYPE = #{tradeType,jdbcType=INTEGER},",
          "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}",
        "where ORDER_ID = #{orderId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TradeOrder record);
}