package com.fr.chain.property.db.mapper;

import com.fr.chain.db.iface.StaticTableDaoSupport;
import com.fr.chain.property.db.entity.Property;
import com.fr.chain.property.db.entity.PropertyExample;
import com.fr.chain.property.db.entity.PropertyKey;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface PropertyMapper extends StaticTableDaoSupport<Property, PropertyExample, PropertyKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @SelectProvider(type=PropertySqlProvider.class, method="countByExample")
    int countByExample(PropertyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @DeleteProvider(type=PropertySqlProvider.class, method="deleteByExample")
    int deleteByExample(PropertyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @Delete({
        "delete from PROPERTY",
        "where PROPERTY_ID = #{propertyId,jdbcType=CHAR}"
    })
    int deleteByPrimaryKey(PropertyKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @Insert({
        "insert into PROPERTY (PROPERTY_ID, MERCHANT_ID, ",
        "APP_ID, OPEN_ID, PRODUCT_ID, ",
        "PROPERTY_TYPE, ADDRESS, ",
        "ORIGIN_OPENID, IS_SELF_SUPPORT, ",
        "PRODUCT_DESC, IS_DIGIT, ",
        "SIGN_TYPE, PROPERTY_NAME, ",
        "UNIT, MIN_COUNT, ",
        "COUNT, URL, AMOUNT, ",
        "DESCRIPTION, CREATE_TIME, ",
        "STATUS)",
        "values (#{propertyId,jdbcType=CHAR}, #{merchantId,jdbcType=VARCHAR}, ",
        "#{appId,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, ",
        "#{propertyType,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{originOpenid,jdbcType=VARCHAR}, #{isSelfSupport,jdbcType=VARCHAR}, ",
        "#{productDesc,jdbcType=VARCHAR}, #{isDigit,jdbcType=VARCHAR}, ",
        "#{signType,jdbcType=VARCHAR}, #{propertyName,jdbcType=VARCHAR}, ",
        "#{unit,jdbcType=VARCHAR}, #{minCount,jdbcType=VARCHAR}, ",
        "#{count,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{amount,jdbcType=REAL}, ",
        "#{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{status,jdbcType=INTEGER})"
    })
    int insert(Property record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @InsertProvider(type=PropertySqlProvider.class, method="insertSelective")
    int insertSelective(Property record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @SelectProvider(type=PropertySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="PROPERTY_ID", property="propertyId", jdbcType=JdbcType.CHAR, id=true),
        @Result(column="MERCHANT_ID", property="merchantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="APP_ID", property="appId", jdbcType=JdbcType.VARCHAR),
        @Result(column="OPEN_ID", property="openId", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_ID", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_TYPE", property="propertyType", jdbcType=JdbcType.VARCHAR),
        @Result(column="ADDRESS", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORIGIN_OPENID", property="originOpenid", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_SELF_SUPPORT", property="isSelfSupport", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_DESC", property="productDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_DIGIT", property="isDigit", jdbcType=JdbcType.VARCHAR),
        @Result(column="SIGN_TYPE", property="signType", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_NAME", property="propertyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="UNIT", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="MIN_COUNT", property="minCount", jdbcType=JdbcType.VARCHAR),
        @Result(column="COUNT", property="count", jdbcType=JdbcType.VARCHAR),
        @Result(column="URL", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.REAL),
        @Result(column="DESCRIPTION", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.INTEGER)
    })
    List<Property> selectByExample(PropertyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @Select({
        "select",
        "PROPERTY_ID, MERCHANT_ID, APP_ID, OPEN_ID, PRODUCT_ID, PROPERTY_TYPE, ADDRESS, ",
        "ORIGIN_OPENID, IS_SELF_SUPPORT, PRODUCT_DESC, IS_DIGIT, SIGN_TYPE, PROPERTY_NAME, ",
        "UNIT, MIN_COUNT, COUNT, URL, AMOUNT, DESCRIPTION, CREATE_TIME, STATUS",
        "from PROPERTY",
        "where PROPERTY_ID = #{propertyId,jdbcType=CHAR}"
    })
    @Results({
        @Result(column="PROPERTY_ID", property="propertyId", jdbcType=JdbcType.CHAR, id=true),
        @Result(column="MERCHANT_ID", property="merchantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="APP_ID", property="appId", jdbcType=JdbcType.VARCHAR),
        @Result(column="OPEN_ID", property="openId", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_ID", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_TYPE", property="propertyType", jdbcType=JdbcType.VARCHAR),
        @Result(column="ADDRESS", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="ORIGIN_OPENID", property="originOpenid", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_SELF_SUPPORT", property="isSelfSupport", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_DESC", property="productDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="IS_DIGIT", property="isDigit", jdbcType=JdbcType.VARCHAR),
        @Result(column="SIGN_TYPE", property="signType", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_NAME", property="propertyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="UNIT", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="MIN_COUNT", property="minCount", jdbcType=JdbcType.VARCHAR),
        @Result(column="COUNT", property="count", jdbcType=JdbcType.VARCHAR),
        @Result(column="URL", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.REAL),
        @Result(column="DESCRIPTION", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.INTEGER)
    })
    Property selectByPrimaryKey(PropertyKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @UpdateProvider(type=PropertySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Property record, @Param("example") PropertyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @UpdateProvider(type=PropertySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Property record, @Param("example") PropertyExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @UpdateProvider(type=PropertySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Property record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROPERTY
     *
     * @mbggenerated Wed Feb 08 16:39:02 CST 2017
     */
    @Update({
        "update PROPERTY",
        "set MERCHANT_ID = #{merchantId,jdbcType=VARCHAR},",
          "APP_ID = #{appId,jdbcType=VARCHAR},",
          "OPEN_ID = #{openId,jdbcType=VARCHAR},",
          "PRODUCT_ID = #{productId,jdbcType=VARCHAR},",
          "PROPERTY_TYPE = #{propertyType,jdbcType=VARCHAR},",
          "ADDRESS = #{address,jdbcType=VARCHAR},",
          "ORIGIN_OPENID = #{originOpenid,jdbcType=VARCHAR},",
          "IS_SELF_SUPPORT = #{isSelfSupport,jdbcType=VARCHAR},",
          "PRODUCT_DESC = #{productDesc,jdbcType=VARCHAR},",
          "IS_DIGIT = #{isDigit,jdbcType=VARCHAR},",
          "SIGN_TYPE = #{signType,jdbcType=VARCHAR},",
          "PROPERTY_NAME = #{propertyName,jdbcType=VARCHAR},",
          "UNIT = #{unit,jdbcType=VARCHAR},",
          "MIN_COUNT = #{minCount,jdbcType=VARCHAR},",
          "COUNT = #{count,jdbcType=VARCHAR},",
          "URL = #{url,jdbcType=VARCHAR},",
          "AMOUNT = #{amount,jdbcType=REAL},",
          "DESCRIPTION = #{description,jdbcType=VARCHAR},",
          "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},",
          "STATUS = #{status,jdbcType=INTEGER}",
        "where PROPERTY_ID = #{propertyId,jdbcType=CHAR}"
    })
    int updateByPrimaryKey(Property record);
}