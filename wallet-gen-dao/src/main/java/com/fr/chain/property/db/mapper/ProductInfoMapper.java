package com.fr.chain.property.db.mapper;

import com.fr.chain.db.iface.StaticTableDaoSupport;
import com.fr.chain.property.db.entity.ProductInfo;
import com.fr.chain.property.db.entity.ProductInfoExample;
import com.fr.chain.property.db.entity.ProductInfoKey;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ProductInfoMapper extends StaticTableDaoSupport<ProductInfo, ProductInfoExample, ProductInfoKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @SelectProvider(type=ProductInfoSqlProvider.class, method="countByExample")
    int countByExample(ProductInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @DeleteProvider(type=ProductInfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(ProductInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @Delete({
        "delete from PRODUCT_INFO",
        "where PRODUCT_ID = #{productId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(ProductInfoKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @Insert({
        "insert into PRODUCT_INFO (PRODUCT_ID, MERCHANT_ID, ",
        "APP_ID, PRODUCT_DESC, ",
        "PROPERTY_TYPE, PROPERTY_CODE, ",
        "ORIGIN_OPENID, SIGN_TYPE, ",
        "PROPERTY_NAME, UNIT, ",
        "MIN_COUNT, URL, DESCRIPTION, ",
        "CREATE_TIME, UPDATE_TIME, ",
        "STATUS)",
        "values (#{productId,jdbcType=VARCHAR}, #{merchantId,jdbcType=VARCHAR}, ",
        "#{appId,jdbcType=VARCHAR}, #{productDesc,jdbcType=VARCHAR}, ",
        "#{propertyType,jdbcType=INTEGER}, #{propertyCode,jdbcType=INTEGER}, ",
        "#{originOpenid,jdbcType=VARCHAR}, #{signType,jdbcType=VARCHAR}, ",
        "#{propertyName,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, ",
        "#{minCount,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{status,jdbcType=INTEGER})"
    })
    int insert(ProductInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @InsertProvider(type=ProductInfoSqlProvider.class, method="insertSelective")
    int insertSelective(ProductInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @SelectProvider(type=ProductInfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="PRODUCT_ID", property="productId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="MERCHANT_ID", property="merchantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="APP_ID", property="appId", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_DESC", property="productDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_TYPE", property="propertyType", jdbcType=JdbcType.INTEGER),
        @Result(column="PROPERTY_CODE", property="propertyCode", jdbcType=JdbcType.INTEGER),
        @Result(column="ORIGIN_OPENID", property="originOpenid", jdbcType=JdbcType.VARCHAR),
        @Result(column="SIGN_TYPE", property="signType", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_NAME", property="propertyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="UNIT", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="MIN_COUNT", property="minCount", jdbcType=JdbcType.VARCHAR),
        @Result(column="URL", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="DESCRIPTION", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.INTEGER)
    })
    List<ProductInfo> selectByExample(ProductInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @Select({
        "select",
        "PRODUCT_ID, MERCHANT_ID, APP_ID, PRODUCT_DESC, PROPERTY_TYPE, PROPERTY_CODE, ",
        "ORIGIN_OPENID, SIGN_TYPE, PROPERTY_NAME, UNIT, MIN_COUNT, URL, DESCRIPTION, ",
        "CREATE_TIME, UPDATE_TIME, STATUS",
        "from PRODUCT_INFO",
        "where PRODUCT_ID = #{productId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="PRODUCT_ID", property="productId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="MERCHANT_ID", property="merchantId", jdbcType=JdbcType.VARCHAR),
        @Result(column="APP_ID", property="appId", jdbcType=JdbcType.VARCHAR),
        @Result(column="PRODUCT_DESC", property="productDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_TYPE", property="propertyType", jdbcType=JdbcType.INTEGER),
        @Result(column="PROPERTY_CODE", property="propertyCode", jdbcType=JdbcType.INTEGER),
        @Result(column="ORIGIN_OPENID", property="originOpenid", jdbcType=JdbcType.VARCHAR),
        @Result(column="SIGN_TYPE", property="signType", jdbcType=JdbcType.VARCHAR),
        @Result(column="PROPERTY_NAME", property="propertyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="UNIT", property="unit", jdbcType=JdbcType.VARCHAR),
        @Result(column="MIN_COUNT", property="minCount", jdbcType=JdbcType.VARCHAR),
        @Result(column="URL", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="DESCRIPTION", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="STATUS", property="status", jdbcType=JdbcType.INTEGER)
    })
    ProductInfo selectByPrimaryKey(ProductInfoKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @UpdateProvider(type=ProductInfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ProductInfo record, @Param("example") ProductInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @UpdateProvider(type=ProductInfoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ProductInfo record, @Param("example") ProductInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @UpdateProvider(type=ProductInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ProductInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PRODUCT_INFO
     *
     * @mbggenerated Thu Feb 23 16:37:02 CST 2017
     */
    @Update({
        "update PRODUCT_INFO",
        "set MERCHANT_ID = #{merchantId,jdbcType=VARCHAR},",
          "APP_ID = #{appId,jdbcType=VARCHAR},",
          "PRODUCT_DESC = #{productDesc,jdbcType=VARCHAR},",
          "PROPERTY_TYPE = #{propertyType,jdbcType=INTEGER},",
          "PROPERTY_CODE = #{propertyCode,jdbcType=INTEGER},",
          "ORIGIN_OPENID = #{originOpenid,jdbcType=VARCHAR},",
          "SIGN_TYPE = #{signType,jdbcType=VARCHAR},",
          "PROPERTY_NAME = #{propertyName,jdbcType=VARCHAR},",
          "UNIT = #{unit,jdbcType=VARCHAR},",
          "MIN_COUNT = #{minCount,jdbcType=VARCHAR},",
          "URL = #{url,jdbcType=VARCHAR},",
          "DESCRIPTION = #{description,jdbcType=VARCHAR},",
          "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},",
          "UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},",
          "STATUS = #{status,jdbcType=INTEGER}",
        "where PRODUCT_ID = #{productId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(ProductInfo record);
}